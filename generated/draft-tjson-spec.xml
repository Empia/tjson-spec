<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd' []>
<rfc ipr="trust200902" category="info" docName="draft-tjson-spec">
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc private=""?>
<?rfc topblock="yes"?>
<?rfc comments="no"?>
<front>
<title abbrev="TJSON Data Interchange Format">Tagged JavaScript Object Notation (TJSON) Data Interchange Format</title>

<author initials="T. " surname="Arcieri" fullname="Tony Arcieri">
<organization></organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email></email>
<uri></uri>
</address>
</author>
<author initials="B. " surname="Laurie" fullname="Ben Laurie">
<organization></organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email></email>
<uri></uri>
</address>
</author>
<date year="2016" month="October" day="2"/>

<area>Internet</area>
<workgroup></workgroup>


<abstract>
<t>Tagged JavaScript Object Notation (TJSON) is a data interchange format which is
backwards compatible with the JavaScript Object Notation (JSON)[ @!RFC7159]
format. It adds first-class type annotations (&quot;tags&quot;) for supporting a richer
set of types within JSON documents.
</t>
</abstract>


</front>

<middle>

<section anchor="introduction" title="Introduction">
<t>Tagged JavaScript Object Notation (TJSON) is a set of backwards-compatible
extensions to JavaScript Object Notation (JSON) <xref target="RFC7159"/> which enrich
the set of types the format is able to express.
</t>
<t>TJSON can represent six primitive types (strings, binary data, integers,
floating points, datetimes, and null) and two structured types (objects and
arrays).
</t>
<t>To extend JSON with additional types in a backwards-compatible manner,
TJSON adds a special mandatory &quot;tag&quot; to each JSON string which identifies
the data type and, optionally, encoding format. A tag consists of one
or more alphanumeric characters, followed by the colon &quot;:&quot; character.
All strings in TJSON MUST have a valid tag prefix.
</t>
<t>TJSON is intended to simplify transcoding documents from other interchange
formats which disambiguate strings from binary data, and also improve the
ability to both canonicalize and authenticate JSON documents.
</t>

<section anchor="conventions-used-in-this-document" title="Conventions Used in This Document">
<t>The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL NOT&quot;, &quot;SHOULD&quot;,
&quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;, &quot;MAY&quot;, and &quot;OPTIONAL&quot; in this document are to be
interpreted as described in <xref target="RFC2119"/>.
</t>
</section>
</section>

<section anchor="tjson-grammar" title="TJSON Grammar">
<t>TJSON relies on JSON as the basis of its grammar. All TJSON documents are valid
JSON documents (however the reverse is not true). The TJSON grammar can thus
be seen as an extension of the JSON grammar, but one implemented in a
backwards-compatible way.
</t>

<section anchor="string-grammar" title="String Grammar">
<t>The main grammatical addition of TJSON is a tag prefix on string literals. Every
string literal MUST have a tag prefix in TJSON. Strings literals in TJSON are
described by the following grammar:
</t>

<figure align="center"><artwork align="center">
&lt;tagged-string&gt; ::= quotation-mark tag *char quotation-mark

&lt;tag&gt; ::= &lt;alpha&gt; *&lt;alphanumeric&gt; ':'

&lt;alpha&gt; ::= 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' |
            'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p' | 'q' | 'r' |
            's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z'

&lt;digit&gt; ::= '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'

&lt;alphanumeric&gt; ::= &lt;alpha&gt; | &lt;digit&gt;
</artwork></figure>
<t>The quotation-mark and char pushdowns are described in section 7 of <xref target="RFC7159"/>.
</t>
<t>TJSON places a maximum length of 4 bytes on tag, including the ':' character.
</t>
</section>

<section anchor="root-symbol" title="Root Symbol">
<t>The root grammatical symbol of all TJSON documents is constrained to the
following nonterminals as described in <xref target="RFC7159"/>:
</t>

<figure align="center"><artwork align="center">
&lt;root&gt; ::= &lt;object&gt; | &lt;array&gt;
</artwork></figure>
<t>Documents which do not contain an object or array as the toplevel element
MUST be rejected by parsers.
</t>
</section>
</section>

<section anchor="extended-types" title="Extended Types">
<t>The following section describes the extended types added to TJSON by embedding
them in string literals as described in section 2.1 of this document.
</t>

<section anchor="unicode-strings" title="Unicode Strings">
<t>The representation of Unicode Strings is grammatically identical to JSON,
except per section 2.1 of this document strings of this type carry a
mandatory tag character, &quot;u:&quot; indicating a Unicode String.
</t>
<t>The following is an example of a Unicode String literal in TJSON:
</t>

<figure align="center"><artwork align="center">
"u:Hello, world!"
</artwork></figure>
<t>Unlike JSON, all Unicode Strings in TJSON MUST be valid UTF-8 <xref target="RFC3629"/>.
</t>
</section>
</section>

</middle>
<back>
<references title="Normative References">
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3629.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7159.xml"?>
</references>

</back>
</rfc>
